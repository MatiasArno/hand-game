{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-5410b64e7add7f92.js","node_modules/@parcel/runtime-js/lib/runtime-4942100dd7b4325a.js","node_modules/@parcel/runtime-js/lib/runtime-8daed7da27160767.js","node_modules/@parcel/runtime-js/lib/runtime-10c1921e1d58693a.js","src/state.ts","src/routes.ts","src/pages/welcome/index.ts","src/pages/play/index.ts","src/pages/counter/index.ts","src/pages/game/index.ts","src/pages/result/index.ts","src/index.ts","src/components/button/index.ts","src/components/text/index.ts","src/components/hand/index.ts","src/components/counter/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"cypst\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bDHyn\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7jfBT\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"dZpbI\\\":\\\"index.98b3b249.js\\\",\\\"cypst\\\":\\\"rock.28c1bba6.svg\\\",\\\"bDHyn\\\":\\\"paper.e7dca706.svg\\\",\\\"7jfBT\\\":\\\"scissors.188fc6be.svg\\\"}\"));","const state = {\r\n\r\n    data: {\r\n        machine: 0,\r\n        user: 0\r\n    },\r\n\r\n    currentPlay: {\r\n        machine: 0,\r\n        user: 0, \r\n        match: \"\"\r\n    },\r\n\r\n    listeners: [],\r\n\r\n    init(){\r\n        const storedState = localStorage.getItem('state') as string;\r\n        storedState == null ? console.log(\"No stored data to render...\") : this.setState(JSON.parse(storedState));\r\n    },\r\n\r\n    getState() {\r\n        return this.data;\r\n    },\r\n\r\n    setState(newState: Object) {\r\n        console.log(\"STATE RECIEVED ==>| \", newState);\r\n        this.data = newState;\r\n        localStorage.setItem('state', JSON.stringify(newState));\r\n\r\n        for(const cb of this.listeners) {\r\n            cb();                           \r\n        }\r\n    },\r\n\r\n    subscribe(callback: (any: any) => any) {\r\n        console.log(`CALLBACK SUBSCRIBED ==>| ${callback}`);\r\n        this.listeners.push(callback);\r\n    },\r\n\r\n    updateScore(match: string, machine: number, user: number) {\r\n        const currentState = this.getState();\r\n\r\n        if(match == \"draw\") {\r\n            currentState.machine++;\r\n            currentState.user++;\r\n        } else if(match == \"user-wins\") {\r\n            currentState.user++;\r\n        } else if(match == \"machine-wins\") {\r\n            currentState.machine++;\r\n        }\r\n\r\n        this.currentPlay = {\r\n            machine: machine,\r\n            user: user,\r\n            match: match\r\n        }\r\n\r\n        this.setState(currentState);\r\n    }\r\n};\r\n\r\nexport { state };","import {initWelcome} from \"./pages/welcome\"; \r\nimport {initPlay} from \"./pages/play\"; \r\nimport {initCounter} from \"./pages/counter\"; \r\nimport {initGame} from \"./pages/game\";\r\nimport {initResult} from \"./pages/result\"; \r\n\r\nconst routes = [\r\n    {\r\n        path: /\\/welcome/,\r\n        handler: initWelcome\r\n    },\r\n    {\r\n        path: /\\/play/,\r\n        handler: initPlay\r\n    },\r\n    {\r\n        path: /\\/counter/,\r\n        handler: initCounter\r\n    },\r\n    {\r\n        path: /\\/game/,\r\n        handler: initGame\r\n    },\r\n    {\r\n        path: /\\/result/,\r\n        handler: initResult\r\n    }\r\n];\r\n\r\nconst BASE_PATH = \"/hand-game\";\r\n\r\nfunction isGithubPages() {\r\n    return location.host.includes('github.io');\r\n}\r\n\r\nexport function initRouter(container: HTMLElement) {\r\n\r\n    function goTo(path: string) {\r\n        const completePath = isGithubPages() ? BASE_PATH + path : path;\r\n        history.pushState({}, \"\", completePath);\r\n        handleRoute(completePath);\r\n    }\r\n\r\n    function handleRoute(route: string) {\r\n    \r\n        console.log(`handleRoute -->| ${route} |<--`);\r\n        const newRoute = isGithubPages() ? route.replace(BASE_PATH, \"\") : route;\r\n    \r\n        for(const r of routes) {\r\n    \r\n            if(r.path.test(newRoute)) {\r\n                r.handler(container, goTo);\r\n            }\r\n        }\r\n    }\r\n\r\n    const CURRENT_PATH = isGithubPages() ? BASE_PATH + \"/\" : \"/\"\r\n    location.pathname == CURRENT_PATH ? goTo(\"/welcome\") : handleRoute(location.pathname);\r\n    window.onpopstate = () => handleRoute(location.pathname);\r\n}","import { state } from \"../../state\";\r\n\r\nexport function initWelcome(root: HTMLElement, goTo: any) {\r\n\r\n    state.init();\r\n\r\n    root.innerHTML = `\r\n        <div class=\"welcome-page\">\r\n            <text-el type=\"1\" class=\"title\">Piedra Papel <span class=\"transparent-character\">ó</span> Tijera</text-el>\r\n\r\n            <button-el type=\"1\" class=\"start-btn\"></button-el>\r\n\r\n            <div class=\"welcome-hands\">\r\n                <hand-el type=\"scrissors\"></hand-el>\r\n                <hand-el type=\"rock\"></hand-el>\r\n                <hand-el type=\"paper\"></hand-el>\r\n            </div>\r\n        </div>\r\n    `;\r\n\r\n    const startBtn = root.querySelector(\".start-btn\") as HTMLElement;\r\n    startBtn.addEventListener(\"click\", () => goTo(\"/play\"));\r\n}","export function initPlay(root: HTMLElement, goTo: any) {\r\n\r\n    root.innerHTML = `\r\n        <div class=\"play-page\">\r\n            <text-el type=\"2\" class=\"instructions\">Presioná jugar y elegí: piedra, papel ó tijera antes de que pasen los tres segundos.</text-el>\r\n\r\n            <button-el type=\"2\" class=\"play-btn\"></button-el>\r\n\r\n            <div class=\"play-hands\">\r\n                <hand-el type=\"scrissors\"></hand-el>\r\n                <hand-el type=\"rock\"></hand-el>\r\n                <hand-el type=\"paper\"></hand-el>\r\n            </div>\r\n        </div>\r\n    `;\r\n\r\n    const startBtn = root.querySelector(\".play-btn\") as HTMLElement;\r\n    startBtn.addEventListener(\"click\", () => goTo(\"/counter\"));\r\n}","import { state } from \"../../state\";\r\n\r\nexport function initCounter(root: HTMLElement, goTo: any) {\r\n\r\n    root.innerHTML = `\r\n        <div class=\"counter-page\">\r\n\r\n            <div class=\"counter\">\r\n            </div>\r\n\r\n            <div class=\"counter-hands\">\r\n                <hand-el class=\"counter-hand\" type=\"scissors\"></hand-el>\r\n                <hand-el class=\"counter-hand\" type=\"rock\"></hand-el>\r\n                <hand-el class=\"counter-hand\" type=\"paper\"></hand-el>\r\n            </div>            \r\n        </div>\r\n    `;\r\n\r\n    const counterEl = root.querySelector(\".counter\") as HTMLElement;\r\n    const handEls = root.querySelectorAll(\".counter-hand\") as any;\r\n    let interval: any;\r\n\r\n    (function changeCounter(n: number) {\r\n\r\n        let count = n;\r\n\r\n        counterEl.innerHTML = `<counter-el>${count}</counter-el>`;\r\n\r\n        interval = setInterval(() => {\r\n            count--;\r\n            counterEl.innerHTML = `<counter-el>${count}</counter-el>`;\r\n\r\n            if(count < 1) {\r\n                clearInterval(interval);\r\n                goTo(\"/play\");\r\n            }\r\n        }, 1000);\r\n    })(3);\r\n\r\n    function game(user: number) {\r\n        const machine = Math.round((Math.random() * 2) + 1);\r\n        if(machine == user) {\r\n            console.log(`Máquina ${machine} | Usuario ${user}`);\r\n            state.updateScore(\"draw\", machine, user);\r\n        } else if(machine == 1 && user == 2 || machine == 2 && user == 3 || machine == 3 && user == 1) {\r\n            console.log(`Máquina ${machine} | Usuario ${user}`);\r\n            state.updateScore(\"user-wins\", machine, user);\r\n        } else {\r\n            console.log(`Máquina ${machine} | Usuario ${user}`);\r\n            state.updateScore(\"machine-wins\", machine, user);\r\n        }\r\n\r\n        clearInterval(interval);\r\n        goTo(\"/game\");\r\n    }\r\n\r\n    handEls.forEach((hand: any) => {\r\n        hand.addEventListener(\"click\", () => {\r\n            const handAtt = hand.getAttribute(\"type\") as string;\r\n            handAtt == \"rock\" ? game(1) : handAtt == \"paper\" ? game(2) : game(3);\r\n        });\r\n    });\r\n}","import { state } from \"../../state\";\r\n\r\nexport function initGame(root: HTMLElement, goTo: any) {\r\n\r\n    function renderGameResult(machine: number, user: number) {\r\n\r\n        root.innerHTML = `\r\n            <div class=\"game-page\">\r\n                <div class=\"machine-hand\">\r\n                    <hand-el type=\"${machine == 1 ? 'rock' : machine == 2 ? 'paper' : 'scissors'}\"></hand-el>                \r\n                </div>\r\n                <div class=\"user-hand\">\r\n                    <hand-el type=\"${user == 1 ? 'rock' : user == 2 ? 'paper' : 'scissors'}\"></hand-el>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        setTimeout(() => goTo(\"/result\"), 3000);\r\n    }\r\n\r\n    state.subscribe(() => renderGameResult(state.currentPlay.machine, state.currentPlay.user));\r\n}","import { state } from \"../../state\";\r\n\r\nexport function initResult(root: HTMLElement, goTo: any) {\r\n\r\n    const currentMatch = state.currentPlay.match;\r\n    const currentState = state.getState();\r\n    console.log(\"CURRENT STATE DE RESULT\", currentState);\r\n\r\n    root.innerHTML = `\r\n        <div class=\"result result-${currentMatch}\">\r\n            <h1 class=\"result-title result-title-${currentMatch}\">${currentMatch == \"draw\" ? \"Empate\" : currentMatch == \"user-wins\" ? \"Ganaste\" : \"Perdiste\"}</h1>\r\n\r\n            <div class=\"score\">\r\n                <h2 class=\"score-title\">Score</h2>\r\n                <p class=\"score-text\">Vos: ${currentState.user}</p>\r\n                <p class=\"score-text\">Máquina: ${currentState.machine}</p>\r\n            </div>\r\n\r\n            <button-el type=\"3\" class=\"playagain-btn\"></button-el>\r\n        </div>\r\n    `;\r\n\r\n    const playAgainBtnEl = root.querySelector(\".playagain-btn\") as HTMLElement;\r\n    playAgainBtnEl.addEventListener(\"click\", () => {\r\n        goTo(\"/play\");\r\n    });\r\n}","import { initRouter } from \"./routes\";\r\nimport { initButtonEl } from \"./components/button\";\r\nimport { initTextEl } from \"./components/text\";\r\nimport { initHandEl } from \"./components/hand\";\r\nimport { initCounterEl } from \"./components/counter\";\r\n\r\nfunction main() {\r\n\r\n    const root = document.querySelector(\".root\") as HTMLElement;\r\n    initRouter(root);\r\n    initButtonEl();\r\n    initTextEl();\r\n    initHandEl();\r\n    initCounterEl();\r\n}\r\n\r\nmain();","export function initButtonEl(){\r\n    \r\n    class Button extends HTMLElement {\r\n\r\n        shadow = this.attachShadow({mode: 'open'});\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        connectedCallback() {\r\n            this.render();\r\n        }\r\n\r\n        render() {\r\n            const style = document.createElement(\"style\");\r\n            const btnType = this.getAttribute(\"type\") as \"1\" | \"2\" | \"3\";\r\n\r\n            style.innerHTML = `\r\n                * {\r\n                    box-sizing: border-box;\r\n                }\r\n\r\n                .button {\r\n                    margin: 0;\r\n                    width: 330px;\r\n                    height: 90px;\r\n                    background-color: #006CFC;\r\n                    color: white;\r\n                    font-family: 'Odibee Sans', cursive;\r\n                    font-size: 45px;\r\n                    border: 10px solid #001997;\r\n                    border-radius: 10px;\r\n                    line-height: 49.86px;\r\n                }\r\n            `;\r\n\r\n            this.shadow.innerHTML = `\r\n                <button class=\"button\">${btnType == \"1\" ? \"Empezar\" : btnType == \"2\" ? \"Jugar\" : \"Volver a Jugar\"}</button>\r\n            `;\r\n\r\n            this.shadow.appendChild(style);\r\n        }\r\n    }\r\n\r\n    customElements.define('button-el', Button);\r\n}","export function initTextEl(){\r\n    \r\n    class Text extends HTMLElement {\r\n\r\n        shadow = this.attachShadow({mode: 'open'});\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        connectedCallback() {\r\n            this.render();\r\n        }\r\n\r\n        render() {\r\n            const style = document.createElement(\"style\");\r\n            const type = this.getAttribute(\"type\") as \"1\" | \"2\";\r\n            const content = this.innerHTML as string;\r\n\r\n            style.innerHTML = `\r\n                * {\r\n                    font-family: 'Zilla Slab', serif;\r\n                    margin: 0;\r\n                    padding: 0;\r\n                    box-sizing: border-box;\r\n                }\r\n\r\n                .title {\r\n                    width: 330px;\r\n                    color: #009048;\r\n                    font-size: 80px;\r\n                    font-weight: 700;\r\n                }\r\n\r\n                    .transparent-character {\r\n                        color: #91CCAF;\r\n                    }\r\n\r\n                .instructions {\r\n                    width: 330px;\r\n                    height: 100%;\r\n                    font-size: 40px;\r\n                    font-weight: 700;\r\n                }\r\n            `;\r\n\r\n            this.shadow.innerHTML = `\r\n                ${type == \"1\" ? `<h1 class=\"title\">${content}</h1>` : `<p class=\"instructions\">${content}</p>`}\r\n            `;\r\n\r\n            this.shadow.appendChild(style);\r\n        }\r\n    }\r\n\r\n    customElements.define('text-el', Text);\r\n}","export function initHandEl(){\r\n    \r\n    class Hand extends HTMLElement {\r\n\r\n        shadow = this.attachShadow({mode: 'open'});\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        connectedCallback() {\r\n            this.render();\r\n        }\r\n\r\n        render() {\r\n            const style = document.createElement(\"style\");\r\n            const type = this.getAttribute(\"type\") as \"rock\" | \"paper\" | \"scissors\";\r\n            const rockURL = require(\"../../media/rock.svg\");\r\n            const paperURL = require(\"../../media/paper.svg\");\r\n            const scissorsURL = require(\"../../media/scissors.svg\");\r\n\r\n            const defaultStyle = `\r\n\r\n                * {\r\n                    margin: 0;\r\n                    padding: 0;\r\n                    box-sizing: border-box;\r\n                }\r\n\r\n                .hand {\r\n                    height: 100%;\r\n                }\r\n            `;\r\n\r\n            style.innerHTML = `${location.pathname != \"/game\" ? `${defaultStyle}` : \"\"}`;\r\n\r\n            this.shadow.innerHTML = `${type == \"rock\" ? `<img class=\"hand\" src=\"${rockURL}\">` : type == \"paper\" ? `<img class=\"hand\" src=\"${paperURL}\">` : `<img class=\"hand\" src=\"${scissorsURL}\">`}`;\r\n\r\n            this.shadow.appendChild(style);\r\n        }\r\n    }\r\n\r\n    customElements.define('hand-el', Hand);\r\n}","export function initCounterEl(){\r\n    \r\n    class Counter extends HTMLElement {\r\n\r\n        shadow = this.attachShadow({mode: 'open'});\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        connectedCallback() {\r\n            this.render();\r\n        }\r\n\r\n        render() {\r\n            const style = document.createElement(\"style\");\r\n            const count = this.textContent as string;\r\n\r\n            style.innerHTML = `\r\n                * {\r\n                    margin: 0;\r\n                    padding: 0;\r\n                    box-sizing: border-box;\r\n                    font-family: 'Zilla Slab', serif;\r\n                }\r\n\r\n                .number {\r\n                    font-size: 216px;\r\n                }\r\n            `;            \r\n\r\n            this.shadow.innerHTML = `<p class=\"number\">${count}</p>`;       \r\n            this.shadow.appendChild(style);\r\n        }\r\n    }\r\n\r\n    customElements.define('counter-el', Counter);\r\n}"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","module","exports","URL","parcelRequire","resolve","import","meta","url","toString","register","JSON","parse","$0b89d474933103bc$export$ca000e230c0caa3e","data","machine","user","currentPlay","match","listeners","init","storedState","localStorage","getItem","console","log","this","setState","getState","newState","setItem","stringify","cb","subscribe","callback","push","updateScore","currentState","$f8409e0880c5cb17$var$routes","path","handler","root","goTo","innerHTML","querySelector","handEls","querySelectorAll","interval","game","Math","round","random","n","count","counterEl","setInterval","clearInterval","currentMatch","$f8409e0880c5cb17$var$BASE_PATH","$f8409e0880c5cb17$var$isGithubPages","location","host","includes","container","completePath","history","pushState","handleRoute","route","newRoute","replace","r","test","CURRENT_PATH","pathname","window","onpopstate","document","Button","HTMLElement","shadow","attachShadow","mode","constructor","super","connectedCallback","render","style","createElement","btnType","getAttribute","Text","type","content","Hand","rockURL","paperURL","scissorsURL","Counter","textContent"],"version":3,"file":"index.98b3b249.js.map"}