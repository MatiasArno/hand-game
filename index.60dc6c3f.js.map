{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-5410b64e7add7f92.js","node_modules/@parcel/runtime-js/lib/runtime-4942100dd7b4325a.js","node_modules/@parcel/runtime-js/lib/runtime-8daed7da27160767.js","node_modules/@parcel/runtime-js/lib/runtime-10c1921e1d58693a.js","src/state.ts","src/routes.ts","src/pages/welcome/index.ts","src/pages/play/index.ts","src/pages/counter/index.ts","src/pages/game/index.ts","src/pages/result/index.ts","src/index.ts","src/components/button/index.ts","src/components/text/index.ts","src/components/hand/index.ts","src/components/counter/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"cypst\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bDHyn\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7jfBT\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"dZpbI\\\":\\\"index.60dc6c3f.js\\\",\\\"cypst\\\":\\\"rock.28c1bba6.svg\\\",\\\"bDHyn\\\":\\\"paper.e7dca706.svg\\\",\\\"7jfBT\\\":\\\"scissors.188fc6be.svg\\\"}\"));","const state = {\n\n    data: {\n        machine: 0,\n        user: 0\n    },\n\n    currentPlay: {\n        machine: 0,\n        user: 0, \n        match: \"\"\n    },\n\n    // listeners: [],\n\n    init(){\n        const storedState = localStorage.getItem('state') as string;\n        storedState == null ? console.log(\"No stored data to render...\") : this.setState(JSON.parse(storedState));\n    },\n\n    getState() {\n        return this.data;\n    },\n\n    setState(newState: Object) {\n        console.log(\"STATE RECIEVED ==>| \", newState);\n        this.data = newState;\n        localStorage.setItem('state', JSON.stringify(newState));\n\n        // for(const cb of this.listeners) {\n        //     cb();                           \n        // }\n    },\n\n    // subscribe(callback: (any: any) => any) {\n    //     console.log(`CALLBACK SUBSCRIBED ==>| ${callback}`);\n    //     console.log(this.listeners, \"TOTAL LISTENERS\");\n    //     this.listeners.push(callback);\n    // },\n\n    updateScore(match: string, machine: number, user: number) {\n        const currentState = this.getState();\n\n        if(match == \"draw\") {\n            currentState.machine++;\n            currentState.user++;\n        } else if(match == \"user-wins\") {\n            currentState.user++;\n        } else if(match == \"machine-wins\") {\n            currentState.machine++;\n        }\n\n        this.currentPlay = {\n            machine: machine,\n            user: user,\n            match: match\n        }\n\n        this.setState(currentState);\n    }\n};\n\nexport { state };","import {initWelcome} from \"./pages/welcome\"; \nimport {initPlay} from \"./pages/play\"; \nimport {initCounter} from \"./pages/counter\"; \nimport {initGame} from \"./pages/game\";\nimport {initResult} from \"./pages/result\"; \n\nconst routes = [\n    {\n        path: /\\/welcome/,\n        handler: initWelcome\n    },\n    {\n        path: /\\/play/,\n        handler: initPlay\n    },\n    {\n        path: /\\/counter/,\n        handler: initCounter\n    },\n    {\n        path: /\\/game/,\n        handler: initGame\n    },\n    {\n        path: /\\/result/,\n        handler: initResult\n    }\n];\n\nconst BASE_PATH = \"/hand-game\";\n\nfunction isGithubPages() {\n    return location.host.includes('github.io');\n}\n\nexport function initRouter(container: HTMLElement) {\n\n    function goTo(path: string) {\n        const completePath = isGithubPages() ? BASE_PATH + path : path;\n        history.pushState({}, \"\", completePath);\n        handleRoute(completePath);\n    }\n\n    function handleRoute(route: string) {\n    \n        console.log(`handleRoute recieved -->| ${route} |<--`);\n        const newRoute = isGithubPages() ? route.replace(BASE_PATH, \"\") : route;\n    \n        for(const r of routes) {\n    \n            if(r.path.test(newRoute)) {\n                r.handler(container, goTo);\n            }\n        }\n    }\n\n    const CURRENT_PATH = isGithubPages() ? BASE_PATH + \"/\" : \"/\"\n    location.pathname == CURRENT_PATH ? goTo(\"/welcome\") : handleRoute(location.pathname);\n    window.onpopstate = () => handleRoute(location.pathname);\n}","import { state } from \"../../state\";\n\nexport function initWelcome(root: HTMLElement, goTo: any) {\n\n    state.init();\n\n    root.innerHTML = `\n        <div class=\"welcome-page\">\n            <text-el type=\"1\" class=\"title\">Piedra Papel <span class=\"transparent-character\">รณ</span> Tijera</text-el>\n\n            <button-el type=\"1\" class=\"start-btn\"></button-el>\n\n            <div class=\"welcome-hands\">\n                <hand-el type=\"scrissors\"></hand-el>\n                <hand-el type=\"rock\"></hand-el>\n                <hand-el type=\"paper\"></hand-el>\n            </div>\n        </div>\n    `;\n\n    const startBtn = root.querySelector(\".start-btn\") as HTMLElement;\n    startBtn.addEventListener(\"click\", () => goTo(\"/play\"));\n}","export function initPlay(root: HTMLElement, goTo: any) {\n\n    root.innerHTML = `\n        <div class=\"play-page\">\n            <text-el type=\"2\" class=\"instructions\">Presionรก jugar y elegรญ: piedra, papel รณ tijera antes de que pasen los tres segundos.</text-el>\n\n            <button-el type=\"2\" class=\"play-btn\"></button-el>\n\n            <div class=\"play-hands\">\n                <hand-el type=\"scrissors\"></hand-el>\n                <hand-el type=\"rock\"></hand-el>\n                <hand-el type=\"paper\"></hand-el>\n            </div>\n        </div>\n    `;\n\n    const startBtn = root.querySelector(\".play-btn\") as HTMLElement;\n    startBtn.addEventListener(\"click\", () => goTo(\"/counter\"));\n}","import { state } from \"../../state\";\n\nexport function initCounter(root: HTMLElement, goTo: any) {\n\n    root.innerHTML = `\n        <div class=\"counter-page\">\n\n            <div class=\"counter\">\n            </div>\n\n            <div class=\"counter-hands\">\n                <hand-el class=\"counter-hand\" type=\"scissors\"></hand-el>\n                <hand-el class=\"counter-hand\" type=\"rock\"></hand-el>\n                <hand-el class=\"counter-hand\" type=\"paper\"></hand-el>\n            </div>            \n        </div>\n    `;\n\n    const counterEl = root.querySelector(\".counter\") as HTMLElement;\n    const handEls = root.querySelectorAll(\".counter-hand\") as any;\n    let interval: any;\n\n    (function changeCounter(n: number) {\n\n        let count = n;\n\n        counterEl.innerHTML = `<counter-el>${count}</counter-el>`;\n\n        interval = setInterval(() => {\n            count--;\n            counterEl.innerHTML = `<counter-el>${count}</counter-el>`;\n\n            if(count < 1) {\n                clearInterval(interval);\n                goTo(\"/play\");\n            }\n        }, 1000);\n    })(3);\n\n    function game(user: number) {\n        const machine = Math.round((Math.random() * 2) + 1);\n        if(machine == user) {\n            state.updateScore(\"draw\", machine, user);\n        } else if(machine == 1 && user == 2 || machine == 2 && user == 3 || machine == 3 && user == 1) {\n            state.updateScore(\"user-wins\", machine, user);\n        } else {\n            state.updateScore(\"machine-wins\", machine, user);\n        }\n\n        clearInterval(interval);\n        goTo(\"/game\");\n    }\n\n    handEls.forEach((hand: any) => {\n        hand.addEventListener(\"click\", () => {\n            const handAtt = hand.getAttribute(\"type\") as string;\n            handAtt == \"rock\" ? game(1) : handAtt == \"paper\" ? game(2) : game(3);\n        });\n    });\n}","import { state } from \"../../state\";\n\nexport function initGame(root: HTMLElement, goTo: any) {\n\n    root.innerHTML = `\n            <div class=\"game-page\">\n                <div class=\"machine-hand\">\n                    <hand-el type=\"${state.currentPlay.machine == 1 ? 'rock' : state.currentPlay.machine == 2 ? 'paper' : 'scissors'}\"></hand-el>                \n                </div>\n                <div class=\"user-hand\">\n                    <hand-el type=\"${state.currentPlay.user == 1 ? 'rock' : state.currentPlay.user == 2 ? 'paper' : 'scissors'}\"></hand-el>\n                </div>\n            </div>\n        `;\n\n    setTimeout(() => goTo(\"/result\"), 3000);\n\n    // function renderGameResult(machine: number, user: number) {\n\n    //     root.innerHTML = `\n    //         <div class=\"game-page\">\n    //             <div class=\"machine-hand\">\n    //                 <hand-el type=\"${machine == 1 ? 'rock' : machine == 2 ? 'paper' : 'scissors'}\"></hand-el>                \n    //             </div>\n    //             <div class=\"user-hand\">\n    //                 <hand-el type=\"${user == 1 ? 'rock' : user == 2 ? 'paper' : 'scissors'}\"></hand-el>\n    //             </div>\n    //         </div>\n    //     `;\n\n    //     setTimeout(() => goTo(\"/result\"), 3000);\n    // }\n\n    // state.subscribe(() => renderGameResult(state.currentPlay.machine, state.currentPlay.user));\n}","import { state } from \"../../state\";\n\nexport function initResult(root: HTMLElement, goTo: any) {\n\n    const currentMatch = state.currentPlay.match;\n    const currentState = state.getState();\n\n    root.innerHTML = `\n        <div class=\"result result-${currentMatch}\">\n            <h1 class=\"result-title result-title-${currentMatch}\">${currentMatch == \"draw\" ? \"Empate\" : currentMatch == \"user-wins\" ? \"Ganaste\" : \"Perdiste\"}</h1>\n\n            <div class=\"score\">\n                <h2 class=\"score-title\">Score</h2>\n                <p class=\"score-text\">Vos: ${currentState.user}</p>\n                <p class=\"score-text\">Mรกquina: ${currentState.machine}</p>\n            </div>\n\n            <button-el type=\"3\" class=\"playagain-btn\"></button-el>\n        </div>\n    `;\n\n    const playAgainBtnEl = root.querySelector(\".playagain-btn\") as HTMLElement;\n    playAgainBtnEl.addEventListener(\"click\", () => {\n        goTo(\"/play\");\n    });\n}","import { initRouter } from \"./routes\";\nimport { initButtonEl } from \"./components/button\";\nimport { initTextEl } from \"./components/text\";\nimport { initHandEl } from \"./components/hand\";\nimport { initCounterEl } from \"./components/counter\";\n\nfunction main() {\n\n    const root = document.querySelector(\".root\") as HTMLElement;\n    initRouter(root);\n    initButtonEl();\n    initTextEl();\n    initHandEl();\n    initCounterEl();\n}\n\nmain();","export function initButtonEl(){\n    \n    class Button extends HTMLElement {\n\n        shadow = this.attachShadow({mode: 'open'});\n\n        constructor() {\n            super();\n        }\n\n        connectedCallback() {\n            this.render();\n        }\n\n        render() {\n            const style = document.createElement(\"style\");\n            const btnType = this.getAttribute(\"type\") as \"1\" | \"2\" | \"3\";\n\n            style.innerHTML = `\n                * {\n                    box-sizing: border-box;\n                }\n\n                .button {\n                    margin: 0;\n                    width: 330px;\n                    height: 90px;\n                    background-color: #006CFC;\n                    color: white;\n                    font-family: 'Odibee Sans', cursive;\n                    font-size: 45px;\n                    border: 10px solid #001997;\n                    border-radius: 10px;\n                    line-height: 49.86px;\n                }\n            `;\n\n            this.shadow.innerHTML = `\n                <button class=\"button\">${btnType == \"1\" ? \"Empezar\" : btnType == \"2\" ? \"Jugar\" : \"Volver a Jugar\"}</button>\n            `;\n\n            this.shadow.appendChild(style);\n        }\n    }\n\n    customElements.define('button-el', Button);\n}","export function initTextEl(){\n    \n    class Text extends HTMLElement {\n\n        shadow = this.attachShadow({mode: 'open'});\n\n        constructor() {\n            super();\n        }\n\n        connectedCallback() {\n            this.render();\n        }\n\n        render() {\n            const style = document.createElement(\"style\");\n            const type = this.getAttribute(\"type\") as \"1\" | \"2\";\n            const content = this.innerHTML as string;\n\n            style.innerHTML = `\n                * {\n                    font-family: 'Zilla Slab', serif;\n                    margin: 0;\n                    padding: 0;\n                    box-sizing: border-box;\n                }\n\n                .title {\n                    width: 330px;\n                    color: #009048;\n                    font-size: 80px;\n                    font-weight: 700;\n                }\n\n                    .transparent-character {\n                        color: #91CCAF;\n                    }\n\n                .instructions {\n                    width: 330px;\n                    height: 100%;\n                    font-size: 40px;\n                    font-weight: 700;\n                }\n            `;\n\n            this.shadow.innerHTML = `\n                ${type == \"1\" ? `<h1 class=\"title\">${content}</h1>` : `<p class=\"instructions\">${content}</p>`}\n            `;\n\n            this.shadow.appendChild(style);\n        }\n    }\n\n    customElements.define('text-el', Text);\n}","export function initHandEl(){\n    \n    class Hand extends HTMLElement {\n\n        shadow = this.attachShadow({mode: 'open'});\n\n        constructor() {\n            super();\n        }\n\n        connectedCallback() {\n            this.render();\n        }\n\n        render() {\n            const style = document.createElement(\"style\");\n            const type = this.getAttribute(\"type\") as \"rock\" | \"paper\" | \"scissors\";\n            const rockURL = require(\"../../media/rock.svg\");\n            const paperURL = require(\"../../media/paper.svg\");\n            const scissorsURL = require(\"../../media/scissors.svg\");\n\n            style.innerHTML = `\n                * {\n                    margin: 0;\n                    padding: 0;\n                    box-sizing: border-box;\n                }\n\n                .hand {\n                    height: 100%;\n                }\n            `;\n\n            this.shadow.innerHTML = `${type == \"rock\" ? `<img class=\"hand\" src=\"${rockURL}\">` : type == \"paper\" ? `<img class=\"hand\" src=\"${paperURL}\">` : `<img class=\"hand\" src=\"${scissorsURL}\">`}`;\n\n            this.shadow.appendChild(style);\n        }\n    }\n\n    customElements.define('hand-el', Hand);\n}","export function initCounterEl(){\n    \n    class Counter extends HTMLElement {\n\n        shadow = this.attachShadow({mode: 'open'});\n\n        constructor() {\n            super();\n        }\n\n        connectedCallback() {\n            this.render();\n        }\n\n        render() {\n            const style = document.createElement(\"style\");\n            const count = this.textContent as string;\n\n            style.innerHTML = `\n                * {\n                    margin: 0;\n                    padding: 0;\n                    box-sizing: border-box;\n                    font-family: 'Zilla Slab', serif;\n                }\n\n                .number {\n                    font-size: 216px;\n                }\n            `;            \n\n            this.shadow.innerHTML = `<p class=\"number\">${count}</p>`;       \n            this.shadow.appendChild(style);\n        }\n    }\n\n    customElements.define('counter-el', Counter);\n}"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","module","exports","URL","parcelRequire","resolve","import","meta","url","toString","register","JSON","parse","$0b89d474933103bc$export$ca000e230c0caa3e","data","machine","user","currentPlay","match","init","storedState","localStorage","getItem","console","log","this","setState","getState","newState","setItem","stringify","updateScore","currentState","$f8409e0880c5cb17$var$routes","path","handler","root","goTo","innerHTML","querySelector","addEventListener","counterEl","handEls","querySelectorAll","interval","game","Math","round","random","clearInterval","n","count","setInterval","forEach","hand","handAtt","getAttribute","setTimeout","currentMatch","$f8409e0880c5cb17$var$BASE_PATH","$f8409e0880c5cb17$var$isGithubPages","location","host","includes","container","completePath","history","pushState","handleRoute","route","newRoute","replace","r","test","CURRENT_PATH","pathname","window","onpopstate","document","Button","HTMLElement","shadow","attachShadow","mode","constructor","super","connectedCallback","render","style","createElement","btnType","appendChild","customElements","define","Text","type","content","Hand","rockURL","paperURL","scissorsURL","Counter","textContent"],"version":3,"file":"index.60dc6c3f.js.map"}